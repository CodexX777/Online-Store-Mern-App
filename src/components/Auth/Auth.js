import React, { useContext, useState } from "react";
import "./Auth.css";
import { AuthContext } from "../../context/auth-context";
import SignUpForm from "./signUpForm";
import LoginForm from "./loginForm";
import LoadingSpinner from "../../Shared/LoadingSpinner";
import ErrorModal from "../../Shared/FormElements/ErrorModal";
import { useHttpClient } from "../../Hooks/http-hook";

const Auth = () => {
  const auth = useContext(AuthContext);

  const { isLoading, error, sendRequest, clearError } = useHttpClient();

  const authSubmitHandler = async (event, action) => {
    if (isLoginMode) {
      try {
        const user = await sendRequest(
          process.env.REACT_APP_BACKEND_URL+"/api/user/login",
          "POST",
          JSON.stringify(event),
          {
            "Content-Type": "application/json",
          }
        );

        auth.login(user.uid, user.address, user.token);
      } catch (err) {
        console.log(err);
      }
    } else {
      try {
        const user = await sendRequest(
          process.env.REACT_APP_BACKEND_URL+"/api/user/signup",
          "POST",
          JSON.stringify({
            name: event.name,
            email: event.email,
            password: event.password,
            phoneNo: event.phoneNo,
          }),
          {
            "Content-Type": "application/json",
          }
        );
        auth.login(user.uid, user.address, user.token);
      } catch (err) {
        console.log(err);
      }
    }
  };
  const [isLoginMode, setIsLoginMode] = useState(true);

  const modeSwitchHandler = () => {
    setIsLoginMode((prevMode) => !prevMode);
  };

  return (
    <>
      <ErrorModal error={error} onClear={clearError} />
      {isLoading && <LoadingSpinner asOverlay />}
      <div className="auth-panel">
        {isLoginMode ? (
          <div className="auth-panel-heading">
            <svg
              width="142"
              height="56"
              viewBox="0 0 142 56"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M0.511719 2.21875H6.37109V37.8438H23.832V43H0.511719V2.21875ZM28.6367 27.8242C28.6367 23.0781 30.1504 19.2305 33.1777 16.2812C36.0098 13.5273 39.5156 12.1504 43.6953 12.1504C47.7969 12.1504 51.2246 13.5273 53.9785 16.2812C56.9082 19.2109 58.373 23.0586 58.373 27.8242C58.373 32.5703 56.8984 36.3984 53.9492 39.3086C51.1562 42.082 47.7285 43.4688 43.666 43.4688C39.5449 43.4688 36.0488 42.082 33.1777 39.3086C30.1504 36.3984 28.6367 32.5703 28.6367 27.8242ZM34.7305 27.8242C34.7305 32.8242 36.332 36.2227 39.5352 38.0195C40.668 38.6445 42.0254 38.957 43.6074 38.957C45.1895 38.957 46.5273 38.6445 47.6211 38.0195C48.7148 37.375 49.6133 36.5352 50.3164 35.5C51.625 33.5078 52.2793 30.9492 52.2793 27.8242C52.2793 22.8633 50.707 19.4648 47.5625 17.6289C46.4688 16.9844 45.1602 16.6621 43.6367 16.6621C42.1133 16.6621 40.7852 16.9844 39.6523 17.6289C38.5391 18.2539 37.6211 19.084 36.8984 20.1191C35.4531 22.1504 34.7305 24.7188 34.7305 27.8242ZM82.7773 54.543C81.0781 54.9727 78.8906 55.1875 76.2148 55.1875C73.5586 55.1875 71.6152 54.9922 70.3848 54.6016V49.3867C71.9277 50.0508 73.8125 50.3828 76.0391 50.3828C78.2852 50.4023 79.9355 50.2559 80.9902 49.9434C82.0449 49.6309 82.875 49.123 83.4805 48.4199C84.5742 47.1504 85.1211 44.8555 85.1211 41.5352V39.9824C83.6367 41.4668 81.6836 42.502 79.2617 43.0879C78.2852 43.3223 77.3086 43.4395 76.332 43.4395C75.3555 43.4395 74.3984 43.332 73.4609 43.1172C72.543 42.9023 71.625 42.5605 70.707 42.0918C69.7891 41.6035 68.9102 40.9785 68.0703 40.2168C67.2305 39.4355 66.4883 38.4688 65.8438 37.3164C64.3984 34.8164 63.6758 31.7402 63.6758 28.0879C63.6367 24.709 64.6133 21.7402 66.6055 19.1816C68.3242 16.9551 70.6875 15.2266 73.6953 13.9961C76.4297 12.8633 79.3887 12.2969 82.5723 12.2969C85.7559 12.2969 88.5586 12.4531 90.9805 12.7656V41.5352C90.9805 48.8398 88.2461 53.1758 82.7773 54.543ZM85.1211 17.043C83.8711 16.8867 82.6406 16.8086 81.4297 16.8086C80.2188 16.8086 78.8613 17.0332 77.3574 17.4824C75.8535 17.9316 74.5352 18.6152 73.4023 19.5332C70.9219 21.5449 69.6816 24.3965 69.6816 28.0879C69.6816 32.0918 70.6484 35.0117 72.582 36.8477C74.0273 38.2344 75.7949 38.9277 77.8848 38.9277C80.4043 38.9277 82.5234 38.0391 84.2422 36.2617C84.6523 35.8125 84.9453 35.4121 85.1211 35.0605V17.043ZM107.387 3.97656C107.387 5.08984 107.016 5.94922 106.273 6.55469C105.551 7.14062 104.643 7.43359 103.549 7.43359C102.455 7.43359 101.547 7.14062 100.824 6.55469C100.121 5.94922 99.7695 5.08984 99.7695 3.97656C99.7695 2.84375 100.121 1.98438 100.824 1.39844C101.547 0.8125 102.455 0.519531 103.549 0.519531C104.643 0.519531 105.551 0.8125 106.273 1.39844C107.016 1.98438 107.387 2.84375 107.387 3.97656ZM100.531 12.7656H106.391V43H100.531V12.7656ZM129.242 17.3359C126.332 17.3359 123.744 18.3223 121.479 20.2949V43H115.619V12.7656H121.039L121.449 16.0469C124.633 13.5469 127.924 12.2969 131.322 12.2969C134.916 12.2969 137.553 13.3711 139.232 15.5195C140.99 17.7852 141.869 21.4375 141.869 26.4766V43H136.01V26.4766C136.01 21.6328 134.701 18.7422 132.084 17.8047C131.244 17.4922 130.297 17.3359 129.242 17.3359Z"
                fill="white"
              />
            </svg>
          </div>
        ) : (
          <div className="auth-panel-heading">
            <svg
              width="188"
              height="56"
              viewBox="0 0 188 56"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M23.7441 40.1582C22.3574 41.1348 20.5801 41.9062 18.4121 42.4727C16.2441 43.0195 13.5879 43.293 10.4434 43.293C7.31836 43.293 4.16406 43.1074 0.980469 42.7363V37.0527C3.83203 37.6973 6.70312 38.0195 9.59375 38.0195C12.4844 38.0195 14.6523 37.8633 16.0977 37.5508C17.543 37.2188 18.7051 36.7891 19.584 36.2617C21.2051 35.2852 22.0156 34.0156 22.0156 32.4531C22.0156 31.2422 21.7031 30.3047 21.0781 29.6406C20.082 28.6055 18.6465 27.6582 16.7715 26.7988L9.27148 23.3711C6.69336 22.1602 4.86719 21.0371 3.79297 20.002C1.48828 17.7754 0.335938 15.1973 0.335938 12.2676C0.335938 9.25977 1.64453 6.82812 4.26172 4.97266C7.13281 2.94141 11.2148 1.92578 16.5078 1.92578C19.9258 1.92578 23.0508 2.0625 25.8828 2.33594V7.93164C23.4805 7.38477 20.7949 7.11133 17.8262 7.11133C14.877 7.11133 12.7285 7.26758 11.3809 7.58008C10.0527 7.87305 9.00781 8.25391 8.24609 8.72266C6.85938 9.58203 6.16602 10.7148 6.16602 12.1211C6.16602 13.4883 6.60547 14.6211 7.48438 15.5195C8.26562 16.2812 9.69141 17.1602 11.7617 18.1562L19.4668 21.8184C22.0254 23.0293 23.8125 24.1719 24.8281 25.2461C25.8633 26.3203 26.625 27.4043 27.1133 28.498C27.6016 29.5723 27.8457 30.8711 27.8457 32.3945C27.8457 33.8984 27.5137 35.3242 26.8496 36.6719C26.1855 38 25.1504 39.1621 23.7441 40.1582ZM42.4062 3.97656C42.4062 5.08984 42.0352 5.94922 41.293 6.55469C40.5703 7.14062 39.6621 7.43359 38.5684 7.43359C37.4746 7.43359 36.5664 7.14062 35.8438 6.55469C35.1406 5.94922 34.7891 5.08984 34.7891 3.97656C34.7891 2.84375 35.1406 1.98438 35.8438 1.39844C36.5664 0.8125 37.4746 0.519531 38.5684 0.519531C39.6621 0.519531 40.5703 0.8125 41.293 1.39844C42.0352 1.98438 42.4062 2.84375 42.4062 3.97656ZM35.5508 12.7656H41.4102V43H35.5508V12.7656ZM67.8359 54.543C66.1367 54.9727 63.9492 55.1875 61.2734 55.1875C58.6172 55.1875 56.6738 54.9922 55.4434 54.6016V49.3867C56.9863 50.0508 58.8711 50.3828 61.0977 50.3828C63.3438 50.4023 64.9941 50.2559 66.0488 49.9434C67.1035 49.6309 67.9336 49.123 68.5391 48.4199C69.6328 47.1504 70.1797 44.8555 70.1797 41.5352V39.9824C68.6953 41.4668 66.7422 42.502 64.3203 43.0879C63.3438 43.3223 62.3672 43.4395 61.3906 43.4395C60.4141 43.4395 59.457 43.332 58.5195 43.1172C57.6016 42.9023 56.6836 42.5605 55.7656 42.0918C54.8477 41.6035 53.9688 40.9785 53.1289 40.2168C52.2891 39.4355 51.5469 38.4688 50.9023 37.3164C49.457 34.8164 48.7344 31.7402 48.7344 28.0879C48.6953 24.709 49.6719 21.7402 51.6641 19.1816C53.3828 16.9551 55.7461 15.2266 58.7539 13.9961C61.4883 12.8633 64.4473 12.2969 67.6309 12.2969C70.8145 12.2969 73.6172 12.4531 76.0391 12.7656V41.5352C76.0391 48.8398 73.3047 53.1758 67.8359 54.543ZM70.1797 17.043C68.9297 16.8867 67.6992 16.8086 66.4883 16.8086C65.2773 16.8086 63.9199 17.0332 62.416 17.4824C60.9121 17.9316 59.5938 18.6152 58.4609 19.5332C55.9805 21.5449 54.7402 24.3965 54.7402 28.0879C54.7402 32.0918 55.707 35.0117 57.6406 36.8477C59.0859 38.2344 60.8535 38.9277 62.9434 38.9277C65.4629 38.9277 67.582 38.0391 69.3008 36.2617C69.7109 35.8125 70.0039 35.4121 70.1797 35.0605V17.043ZM99.2422 17.3359C96.332 17.3359 93.7441 18.3223 91.4785 20.2949V43H85.6191V12.7656H91.0391L91.4492 16.0469C94.6328 13.5469 97.9238 12.2969 101.322 12.2969C104.916 12.2969 107.553 13.3711 109.232 15.5195C110.99 17.7852 111.869 21.4375 111.869 26.4766V43H106.01V26.4766C106.01 21.6328 104.701 18.7422 102.084 17.8047C101.244 17.4922 100.297 17.3359 99.2422 17.3359ZM136.127 38.4297C142.533 38.4297 145.736 34.4941 145.736 26.623V2.21875H151.596V26.623C151.596 32.3848 150.141 36.7012 147.23 39.5723C144.594 42.1699 140.893 43.4688 136.127 43.4688C128.764 43.4688 123.988 40.4316 121.801 34.3574C121.02 32.2285 120.629 29.6504 120.629 26.623V2.21875H126.488V26.623C126.488 34.4941 129.701 38.4297 136.127 38.4297ZM166.977 54.7188H161.117V12.7656H166.391L166.625 16.2227C167.797 14.6602 169.594 13.498 172.016 12.7363C172.953 12.4434 173.9 12.2969 174.857 12.2969C175.834 12.2969 176.791 12.4043 177.729 12.6191C178.666 12.8145 179.594 13.1465 180.512 13.6152C181.43 14.0645 182.309 14.6699 183.148 15.4316C183.988 16.1738 184.73 17.1016 185.375 18.2148C186.781 20.6172 187.484 23.5957 187.484 27.1504C187.484 32.5801 185.609 36.7305 181.859 39.6016C178.539 42.1602 174.496 43.4395 169.73 43.4395H168.266C167.797 43.4395 167.367 43.4297 166.977 43.4102V54.7188ZM166.977 38.6641C167.523 38.8203 168.598 38.8984 170.199 38.8984C171.801 38.8984 173.305 38.6738 174.711 38.2246C176.117 37.7754 177.309 37.082 178.285 36.1445C180.355 34.1523 181.391 31.1543 181.391 27.1504C181.391 23.3809 180.492 20.5977 178.695 18.8008C177.367 17.4727 175.746 16.8086 173.832 16.8086C171.43 16.8086 169.438 17.6973 167.855 19.4746C167.445 19.9238 167.152 20.3242 166.977 20.6758V38.6641Z"
                fill="white"
              />
            </svg>
          </div>
        )}

        {isLoginMode ? (
          <div className="auth-form_view">
            <LoginForm
              modeSwitchHandler={modeSwitchHandler}
              authSubmitHandler={authSubmitHandler}
            />
          </div>
        ) : (
          <div className="signup-auth-form_view">
            <SignUpForm
              modeSwitchHandler={modeSwitchHandler}
              authSubmitHandler={authSubmitHandler}
            />
          </div>
        )}
      </div>
    </>
  );
};

export default Auth;
